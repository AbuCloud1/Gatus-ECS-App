name: Build and Deploy Gatus Image

on:
  push:
    branches: [ main ]
    paths:
      - 'garus-app/**'
      - '.github/workflows/build-gatus.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'garus-app/**'
      - '.github/workflows/build-gatus.yml'
  workflow_dispatch: # Allow manual trigger

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: gatuswebapp
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        # Build the image
        docker build \
          --platform linux/amd64 \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$(date +%Y%m%d-%H%M%S) \
          ./garus-app
        
        # Push images
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(date +%Y%m%d-%H%M%S)
        
    - name: Output image URI
      run: |
        echo "‚úÖ Image built and pushed successfully!"
        echo "üì¶ Image URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
        echo "üè∑Ô∏è  Latest tag: ${{ env.IMAGE_TAG }}"
        echo "üìÖ Timestamp tag: $(date +%Y%m%d-%H%M%S)"
        
  test-build:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Test Docker build locally
      run: |
        cd garus-app
        docker build --platform linux/amd64 -t gatuswebapp:test .
        echo "‚úÖ Docker build test passed!"
        
    - name: Verify image contents
      run: |
        docker run --rm gatuswebapp:test /app/gatus --version || echo "Version check not available"
        docker run --rm gatuswebapp:test ls -la /app/
        echo "‚úÖ Image verification completed!"
