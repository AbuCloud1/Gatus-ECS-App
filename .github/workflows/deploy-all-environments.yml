name: Deploy to All Environments

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - dev
        - staging
        - prod
  push:
    branches: [ main ]
    paths-ignore:
      - 'garus-app/**'
      - 'README.md'
      - '**.md'

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: gatuswebapp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd garus-app
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform/environments/dev
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/environments/dev
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform/environments/dev
          terraform apply -auto-approve tfplan

      - name: Deployment Success - Dev
        run: |
          echo "‚úÖ Successfully deployed to DEV environment"
          echo "Environment: DEV"
          echo "Status: SUCCESS"
          echo "Timestamp: $(date)"

  deploy-staging:
    needs: [build-and-push, deploy-dev]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform/environments/staging
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/environments/staging
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform/environments/staging
          terraform apply -auto-approve tfplan

      - name: Deployment Success - Staging
        run: |
          echo "‚úÖ Successfully deployed to STAGING environment"
          echo "Environment: STAGING"
          echo "Status: SUCCESS"
          echo "Timestamp: $(date)"

  deploy-prod:
    needs: [build-and-push, deploy-staging]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform/environments/prod
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/environments/prod
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform/environments/prod
          terraform apply -auto-approve tfplan

      - name: Deployment Success - Prod
        run: |
          echo "‚úÖ Successfully deployed to PROD environment"
          echo "Environment: PROD"
          echo "Status: SUCCESS"
          echo "Timestamp: $(date)"

  deployment-summary:
    needs: [deploy-dev, deploy-staging, deploy-prod]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "üöÄ MULTI-ENVIRONMENT DEPLOYMENT SUMMARY"
          echo "====================================="
          echo "‚úÖ DEV Environment: DEPLOYED"
          echo "‚úÖ STAGING Environment: DEPLOYED"
          echo "‚úÖ PROD Environment: DEPLOYED"
          echo ""
          echo "üéØ All environments successfully deployed!"
          echo "üìä Pipeline completed at: $(date)"
          echo ""
          echo "üåê Access URLs:"
          echo "   DEV: https://tm.easyumrahs.com"
          echo "   STAGING: https://staging.easyumrahs.com"
          echo "   PROD: https://tm.easyumrahs.com"
